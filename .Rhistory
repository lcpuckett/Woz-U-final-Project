Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4),
Recidivism_Within_3years=dplyr::recode(Recidivism_Within_3years,"true"=0, "false"=1),
Recidivism_Arrest_Year1=dplyr::recode( Recidivism_Arrest_Year1,"true"=0, "false"=1),
Recidivism_Arrest_Year2=dplyr::recode( Recidivism_Arrest_Year2,"true"=0, "false"=1),
Recidivism_Arrest_Year3=dplyr::recode( Recidivism_Arrest_Year3,"true"=0, "false"=1)
)
dataR1= dataR[, c(5,6,8:19)]
#making nice looking plots
corr_matrix <- cor(dataR1)
corr_matrix
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
dataR1= dataR[, c(5,6,8,9,10,11,12,16:19)]
#making nice looking plots
corr_matrix <- cor(dataR1)
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
corr_mat= cor(nojob1)
View(nojob1)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
View(nojob1)
nojob1=nojob[, c(3:11)]
View(nojob1)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
corr_mat= cor(nojob1)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
nojob1=nojob[, c(3:11)]
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
nojob1=nojob[, c(3:11)]
corr_mat= cor(nojob1)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
#for anything with only two fators
CrossTable(data2$Gender, data2$Recidivism_Within_3years, chisq = TRUE,mcnemar = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
Data <- read.csv("C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/First Choice Data.csv", na.strings = c(""), stringsAsFactors=TRUE)
View(Data)
#removed all unneeded columns
data <- Data[ -c(5:8,10, 12,21:42,47,48) ]
View(data)
#removed all unneeded columns
data <- Data[ -c(5:8,10, 12,21:42,47,48,54) ]
View(data)
#all the packages!
library(ggplot2)
library(dbplyr)
library(tidyr)
library(tidyverse)
library(lattice)
library("gmodels")
library("rcompanion")
library("car")
library("fastR2")
library("PerformanceAnalytics")
library("corrplot")
#removing empty cells, looked like there were only 3277
Data1= na.omit(data)
View(Data1)
#removed all unneeded columns
data <- Data[ -c(5:8,10, 12,21:42,47,48,49,54) ]
#removing empty cells, looked like there were only 3277
Data1= na.omit(data)
str(Data1)
levels(Data1$Prior_Arrest_Episodes_Misd)
studentSurveyArea <- studentSurvey[, 31:42]
library("corpcor")
library("GPArotation")
library("psych")
library("IDPmisc")
Data <- read.csv("C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/First Choice Data.csv", na.strings = c(""), stringsAsFactors=TRUE)
#removed all unneeded columns
data1 <- Data[ -c(5:8,10, 12:16,18:20,29:49,54) ]
#made a table with just prior convictions if needed, used recoded data for any needed analysis
priors= dataR[c(8:14)]
#second data set to look at unemployment by month/ year and how it effects crime, need to do some analysis still!
library(readxl)
nojob= read_excel("C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/Woz-U-final-Project/Unemployment and Crime.xlsx")
str(nojob)
#all the packages!
library(ggplot2)
library(dbplyr)
library(tidyr)
library(tidyverse)
library(lattice)
library("gmodels")
library("rcompanion")
library("car")
library("fastR2")
library("PerformanceAnalytics")
library("corrplot")
#removing empty cells, looked like there were only 3277
data2= na.omit(data1)
str(data2)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
#recoding prior convictions, education level and prison offense. les is doing all other needed recodes.
dataR= mutate(data2, Prior_Arrest_Episodes_Drug=dplyr::recode(Prior_Arrest_Episodes_Drug,"0"=0, "1"=1, "2"=2, "3"= 3, "4"=4, "5 or more"=5),
Prior_Conviction_Episodes_Felony=dplyr::recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=dplyr::recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=dplyr::recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=dplyr::recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=dplyr::recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=dplyr::recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=dplyr::recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4),
Recidivism_Within_3years=dplyr::recode(Recidivism_Within_3years,"true"=0, "false"=1),
Recidivism_Arrest_Year1=dplyr::recode( Recidivism_Arrest_Year1,"true"=0, "false"=1),
Recidivism_Arrest_Year2=dplyr::recode( Recidivism_Arrest_Year2,"true"=0, "false"=1),
Recidivism_Arrest_Year3=dplyr::recode( Recidivism_Arrest_Year3,"true"=0, "false"=1)
)
#POST-WRANGLE INFO (checking that forms and types of data work for our analysis)
#to make histograms have to use recoded data.
ggplot(dataR, aes(x = Prior_Arrest_Episodes_Drug)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Misd))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x = Prior_Conviction_Episodes_Viol)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x = Prior_Conviction_Episodes_Prop)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Drug))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_PPViolationCharges))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_DomesticViolenceCharges))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_GunCharges))+geom_histogram(binwidth=0.5)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=0.05)
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar()
#lots of property offenses
ggplot(data2, aes(Age_at_Release))+ geom_bar()
#majority of people released are between 23- 32, then numbers drop! matches anecdotal info 25 is golden year for rearrest
ggplot(data2, aes(Education_Level))+ geom_bar()
#very few college educated getting arrested, mostly high school grads and then some with no diploma
ggplot(data2, aes(Prior_Arrest_Episodes_Drug))+geom_bar()
#once again looking at connection to drugs, the majority have 0 prior arrests, the least having four or "5 or more"
ggplot(data2, aes(Prior_Conviction_Episodes_Drug))+geom_bar()
#this again shows that majority of people dont have many drug convictions, like there are with property
ggplot(Data, aes(Prior_Arrest_Episodes_Violent))+geom_bar()
ggplot(data2, aes(Recidivism_Arrest_Year1))+ geom_bar()
ggplot(data2, aes(Recidivism_Arrest_Year2))+ geom_bar()
ggplot(data2, aes(Recidivism_Arrest_Year3))+ geom_bar()
ggplot(data2, aes(Recidivism_Within_3years))+ geom_bar()
#cant check normality with categorical data
ggplot(dataR, aes(sample = Education_Level)) + geom_qq()
ggplot(nojob, aes(sample = TotalCrime)) + geom_qq()
View(dataR)
View(Data)
#cant check normality with categorical data
ggplot(Data, aes(sample = DrugTests_Cocaine_Positive)) + geom_qq()
#cant check normality with categorical data
ggplot(Data, aes(sample = DrugTests_Cocaine_Meth)) + geom_qq()
#cant check normality with categorical data
ggplot(Data, aes(sample = DrugTests_Meth_Positive)) + geom_qq()
#pretty close to normal
ggplot(nojob, aes(sample = Unemploy_Georgia)) + geom_qq()
ggplot(nojob, aes(x = TotalCrime, y = Unemploy_Georgia))+geom_point()+geom_smooth(method=lm, color = "aquamarine")
#check correlation between some variables?
cor.test(nojob$TotalCrime, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
cor.test(nojob$Rape, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
#negative correlation
cor.test(nojob$Robbery, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
#correlation of 0.38, moderately positive
cor.test(nojob$Rape, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
#check correlation between some variables?
cor.test(nojob$TotalCrime, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
#correlation of 0.38, moderately positive, significant
cor.test(nojob$Rape, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
View(nojob)
#correlation of 0.38, moderately positive, significant
cor.test(nojob$Murder, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
#correlation of 0.38, moderately positive, significant
cor.test(nojob$Burglary, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
Robbery
#very significant high correlation with unemployment
cor.test(nojob$Robbery, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
#very significant high correlation with unemployment
cor.test(nojob$Assault, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
#very significant high correlation with unemployment
cor.test(nojob$Larceny, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
#very significant high correlation with unemployment
cor.test(nojob$Vehicle_Theft, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
nojob1=nojob[, c(3:11)]
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
#very significant high correlation with unemployment
cor.test(nojob$Larceny, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
View(nojob)
nojob1=nojob[, c(2:11)]
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
nojob1=nojob[, c(1:11)]
nojob1=nojob[, c(3:11)]
nojob1=nojob[, c(1:11)]
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
nojob1=nojob[, c(3:11)]
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
#looking at certain convictions with education level shows there is moderate correlation, nothing highly correlated
dataR1= dataR[, c(5,6,8,9,10,11,12,16:19)]
chart.Correlation(dataR1, histogram=FALSE, method="pearson")
View(dataR1)
#looking at education, prison offense and ARRESTS for drugs
dataR2= dataR[, c(2,3,4,6)]
chart.Correlation(dataR2, histogram=FALSE, method="pearson")
View(dataR2)
View(dataR1)
#looking at education, prison offense and ARRESTS for drugs
dataR2= dataR[, c(5,6,16:19)]
chart.Correlation(dataR2, histogram=FALSE, method="pearson")
View(dataR)
cor.test(dataR1$Recidivism_Within_3years, dataR1$Recidivism_Arrest_Year1, method="pearson", use = "complete.obs")
#looking at education, prison offense and ARRESTS for drugs
dataR2= dataR[, c(5,6,7,16:19)]
ggplot(dataR1, aes(x = Recidivism_Within_3years, y = Recidivism_Arrest_Year1))+geom_point()+geom_smooth(method=lm, color = "aquamarine")
ggplot(dataR1, aes(x = Recidivism_Within_3years, y = Recidivism_Arrest_Year2))+geom_point()+geom_smooth(method=lm, color = "aquamarine")
ggplot(dataR1, aes(x = Recidivism_Within_3years, y = Recidivism_Arrest_Year3))+geom_point()+geom_smooth(method=lm, color = "aquamarine")
cor.test(dataR1$Recidivism_Within_3years, dataR1$Recidivism_Arrest_Year2, method="pearson", use = "complete.obs")
cor.test(dataR1$Recidivism_Within_3years, dataR1$Recidivism_Arrest_Year3, method="pearson", use = "complete.obs")
#looking at education, prison offense and ARRESTS for drugs
dataR2= dataR[, c(5,6,7,16:19)]
View(dataR2)
#making nice looking plots
corr_matrix <- cor(dataR2)
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
corr_mat= cor(nojob1)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
View(nojob1)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
corr_mat= cor(nojob)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.05, insig="blank")
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.05, insig="blank")
corrplot(corr_mat, type="lower", order="hclust", p.mat = corr_matrix, sig.level = 0.05, insig="blank")
#DSO105 data time!
#we could do some goodness of fit Chi squares with random guesses about probabilities of going back? perhaps need more background info about returning to prison
#independent chi square to compare each! dont need to recode!use this to compare all the conviciton types to each other
CrossTable(data2$Age_at_Release, data2$Prison_Offense, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#DSO105 data time!
#we could do some goodness of fit Chi squares with random guesses about probabilities of going back? perhaps need more background info about returning to prison
#independent chi square to compare each! dont need to recode!use this to compare all the conviciton types to each other
CrossTable(data2$Age_at_Release, data2$Prison_Offense, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
library(ggplot2)
library(dbplyr)
library(tidyr)
library(tidyverse)
library(lattice)
library("gmodels")
library("rcompanion")
library("car")
library("fastR2")
library("PerformanceAnalytics")
library("corrplot")
ggplot(data2, aes(Recidivism_Within_3years))+ geom_bar()
ggplot(data2, aes(Recidivism_Arrest_Year1))+ geom_bar()
#DSO105 data time!
#we could do some goodness of fit Chi squares with random guesses about probabilities of going back? perhaps need more background info about returning to prison
#independent chi square to compare each! dont need to recode!use this to compare all the conviciton types to each other
CrossTable(data2$Age_at_Release, data2$Prison_Offense, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
Need to do each conviction!
CrossTable(data2$Age_at_Release, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Education_Level, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Gender, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Race, data2$Prison_Offense, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Race, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#more than college educated than expected were committing violent crimes. committing less property crime than expected. high school only were
#doing less violent/ non sex crime than expected, while no diploma people were doing less violent/ sex crime than expected.
#So highly educated people were more violent than expected! is it b/c loan debt?? haha
CrossTable(data2$Education_Level, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#unemployment
CrossTable(nojob$TotalCrime, nojob$Unemploy_Georgia, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#unemployment
CrossTable(nojob$Year, nojob$Unemploy_Georgia, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
corrplot(corr_mat, type="lower", order="hclust", p.mat = corr_matrix, sig.level = 0.05, insig="blank")
View(nojob)
corr_mat= cor(nojob1)
View(corr_mat)
corrplot(corr_mat, type="lower", order="hclust", p.mat = corr_matrix, sig.level = 0.05, insig="blank")
View(corr_matrix)
corrplot(corr_mat, type="lower", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
#prior convictions/ arrests
CrossTable(data2$Prior_Arrest_Episodes_Drug, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Arrest_Episodes_Drug, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
chisq(dataR2)
CrossTable(data2$Prior_Conviction_Episodes_Felony, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Conviction_Episodes_Felony, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Conviction_Episodes_Misd, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Conviction_Episodes_DomesticViolenceCharges, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Conviction_Episodes_Viol, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Conviction_Episodes_Prop, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Conviction_Episodes_Drug, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Conviction_Episodes_PPViolationCharges, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Conviction_Episodes_GunCharges, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Prior_Conviction_Episodes_Felony, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Prior_Conviction_Episodes_Misd, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Prior_Conviction_Episodes_Viol, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Prior_Conviction_Episodes_Prop, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Prior_Conviction_Episodes_Drug, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Prior_Conviction_Episodes_PPViolationCharges, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Prior_Conviction_Episodes_DomesticViolenceCharges, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Prior_Conviction_Episodes_GunCharges, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prison'', data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prison_Offense, data2$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Prison_Offense, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prison_Offense, data2$Recidivism_Arrest_Year2, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prison_Offense, data2$Recidivism_Arrest_Year3, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Conviction_Episodes_Prop, data2$Age_at_Release, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Prior_Conviction_Episodes_Misd, data2$Age_at_Release, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#prior convictions/ arrests
CrossTable(data2$Age_at_Release, data2$Prior_Conviction_Episodes_Felony, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#age
CrossTable(data2$Age_at_Release, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Age_at_Release, data2$Prison_Offense, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#gender
CrossTable(data2$Gender, data2$Recidivism_Within_3years, chisq = TRUE,mcnemar = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#race
CrossTable(data2$Race, data2$Recidivism_Within_3years, chisq = TRUE,mcnemar = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#drug use
CrossTable(data2$Prior_Arrest_Episodes_Drug, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#drug use
CrossTable(data2$DrugTests_Meth_Positive, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#drug use
CrossTable(data2$DrugTests_THC_Positive, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
View(data2)
#DSO105 data time!
#we could do some goodness of fit Chi squares with random guesses about probabilities of going back? perhaps need more background info about returning to prison
CrossTable(data2$Prison_Offense, data2$Age_at_Release, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#drug use
CrossTable(data2$DrugTests_THC_Positive, data2$Age_at_Release, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#drug use
CrossTable(data2$DrugTests_Cocaine_Positive, data2$Age_at_Release, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
View(Data)
#drug use
CrossTable(data1$Dependents, data1$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#drug use
Data1=na.omit(Data)
CrossTable(Data1$Dependents, Data1$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(Data1$Dependents, Data1$Recidivism_Within_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#drug use
Data1=na.omit(Data)
CrossTable(Data1$Dependents, Data1$Recidivism_Within_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
View(Data1)
CrossTable(Data1$Dependents, Data1$Recidivism_Within_Year2, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(Data1$Dependents, Data1$Recidivism_Arrest_Year1, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(Data1$Dependents, Data1$Age_at_Release, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
fligner.test(TotalCrime ~ Unemploy_Georgia, data=nojob)
#update self on anovas and tests.
fligner.test(Education_Level ~ Prison_Offense, data=dataR)
#remake in tableau
plotNormalHistogram(dataR$Education_Level)
#check correlation between some variables?
cor.test(nojob$TotalCrime, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
ggplot(data2, aes(Recidivism_Arrest_Year1))+ geom_bar()
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar()
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar(color="aquamarine")
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar(fill="aquamarine")
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar(fill="green")
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar(fill="forestgreen")
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar(fill="purple")
ggplot(nojob, aes(x = TotalCrime, y = Unemploy_Georgia))+geom_point()+geom_smooth(method=lm, color = "aquamarine")
#all the packages!
library(ggplot2)
ggplot(nojob, aes(x = TotalCrime, y = Unemploy_Georgia))+geom_point()+geom_smooth(method=lm, color = "aquamarine")
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar(fill="purple")
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar(fill="navyblue")
#POST-WRANGLE INFO (checking that forms and types of data work for our analysis)
#to make histograms have to use recoded data.
ggplot(dataR, aes(x = Prior_Arrest_Episodes_Drug)) + geom_histogram(binwidth = 0.5)
#all the packages!
library(ggplot2)
#POST-WRANGLE INFO (checking that forms and types of data work for our analysis)
#to make histograms have to use recoded data.
ggplot(dataR, aes(x = Prior_Arrest_Episodes_Drug)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Felony))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Misd))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x = Prior_Conviction_Episodes_Viol)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x = Prior_Conviction_Episodes_Prop)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Drug))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_PPViolationCharges))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_DomesticViolenceCharges))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_GunCharges))+geom_histogram(binwidth=0.5)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=0.05)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=0.005)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=1)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=7)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=.002)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=.02)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=.07)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=.1)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=.9)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=.4)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=.23)
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar(fill="navyblue")
#lots of property offenses
ggplot(data2, aes(Age_at_Release))+ geom_bar()
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar(fill="navyblue")
#lots of property offenses
ggplot(data2, aes(Age_at_Release))+ geom_bar(fill="navyblue")
#majority of people released are between 23- 32, then numbers drop! matches anecdotal info 25 is golden year for rearrest
ggplot(data2, aes(Education_Level))+ geom_bar(fill="navyblue")
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar(fill="navyblue")
#lots of property offenses
ggplot(data2, aes(Age_at_Release))+ geom_bar(fill="navyblue")
#majority of people released are between 23- 32, then numbers drop! matches anecdotal info 25 is golden year for rearrest
ggplot(data2, aes(Education_Level))+ geom_bar(fill="navyblue")
#very few college educated getting arrested, mostly high school grads and then some with no diploma
ggplot(data2, aes(Prior_Arrest_Episodes_Drug))+geom_bar(fill="navyblue")
#this again shows that majority of people dont have many drug convictions, like there are with property
ggplot(Data, aes(Prior_Arrest_Episodes_Violent))+geom_bar(fill="navyblue")
ggplot(data2, aes(Recidivism_Arrest_Year1))+ geom_bar(fill="navyblue")
ggplot(data2, aes(Recidivism_Arrest_Year2))+ geom_bar(fill="navyblue")
ggplot(data2, aes(Recidivism_Arrest_Year3))+ geom_bar(fill="navyblue")
ggplot(data2, aes(Recidivism_Within_3years))+ geom_bar(fill="navyblue")
ggplot(nojob, aes(x = TotalCrime, y = Unemploy_Georgia))+geom_point()+geom_smooth(method=lm, color = "aquamarine")
#check correlation between some variables?
cor.test(nojob$TotalCrime, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
library("corrplot")
library("PerformanceAnalytics")
#correlation of 0.38, moderately positive, significant
cor.test(nojob$Burglary, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
remove.packages(tidyverse)
library(dplyr)
renv::install("rlang@0.4.10")
dplyr::install("rlang@0.4.10")
packageVersion("rlang")
library(dbplyr)
library(dplyr)
install.packages("rlang")
library(IRkernel)
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
install.packages(c("generics", "lattice", "mgcv", "mvtnorm", "nlme", "pillar", "pkgload", "raster", "rvest", "survival", "usethis", "viridis", "xfun"))
View(dataR)
View(dataR)
write.xlsx(dataR, "C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/DataR.xlsx")
library(xlsx)
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
write.xlsx(dataR, "C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/DataR.xlsx")
fun(xlsx,xlsx)
library(rJava)
install.packages("writexl")
library(writexl)
write_xlsx(dataR, "C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/DataR.xlsx")
qplot(data=data2)+ geom_bar(aes(Prison_Offense, Age_at_Release, Education_Level, Prior_Arrest_Episodes_Drug, fill= "navyblue"))
#all the packages!
library(ggplot2)
qplot(data=data2)+ geom_bar(aes(Prison_Offense, Age_at_Release, Education_Level, Prior_Arrest_Episodes_Drug, fill= "navyblue"))
qplot(data2)+ geom_bar(aes(Prison_Offense, Age_at_Release, Education_Level, Prior_Arrest_Episodes_Drug, fill= "navyblue"))
qplot(data2)+ geom_bar(aes(Education_Level, Prior_Arrest_Episodes_Drug, fill= "navyblue"))
qplot(data2)+ geom_bar()
#POST-WRANGLE INFO (checking that forms and types of data work for our analysis)
#to make histograms have to use recoded data.
ggplot(dataR, aes(x = Prior_Arrest_Episodes_Drug)) + geom_histogram(binwidth = 0.5)
#all the packages!
library(ggplot2)
#POST-WRANGLE INFO (checking that forms and types of data work for our analysis)
#to make histograms have to use recoded data.
ggplot(dataR, aes(x = Prior_Arrest_Episodes_Drug)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Felony))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Misd))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x = Prior_Conviction_Episodes_Viol)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x = Prior_Conviction_Episodes_Prop)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Drug))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_PPViolationCharges))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_DomesticViolenceCharges))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_GunCharges))+geom_histogram(binwidth=0.5)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=.23)
ggplot(dataR, aes(x = Prior_Conviction_Episodes_Viol)) + geom_bar()
ggplot(data2, aes(x = Prior_Conviction_Episodes_Viol)) + geom_bar()
