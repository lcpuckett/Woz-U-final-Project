dataR= na.omit(data1)
str(data1)
Data <- read.csv("C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/First Choice Data.csv", stringsAsFactors=TRUE)
data1 <- Data[ -c(5:8,10, 12:20,29:49,54) ]
convictions= Data[c(21:28)]
install.packages("ggplot2")
library(ggplot2)
install.packages("dbplyr")
library(dbplyr)
install.packages("tidyr")
library(tidyr)
install.packages("tidyverse")
library(tidyverse)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
dataR= mutate(data1,Prior_Conviction_Episodes_Felony=recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1)
)
Data <- read.csv("C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/First Choice Data.csv", na.strings = c(""), stringsAsFactors=TRUE)
#removed all unneeded columns
data1 <- Data[ -c(5:8,10, 12:20,29:49,54) ]
#made a table with just prior convictions if needed, used recoded data for any needed analysis
priors= dataR[c(7:14)]
#second data set to look at unemployment by month/ year and how it effects crime, need to do some analysis still!
library(readxl)
nojob= read_excel("C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/Woz-U-final-Project/Unemployment and Crime.xlsx")
#all the packages!
library(ggplot2)
library(dbplyr)
library(tidyr)
library(tidyverse)
library(lattice)
library("gmodels")
library("rcompanion")
library("car")
library("fastR2")
#removing empty cells, looked like there were only 3277
data2= na.omit(data1)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
#recoding prior convictions, education level and prison offense. les is doing all other needed recodes.
dataR= mutate(data2, Prior_Conviction_Episodes_Felony=dplyr::recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=dplyr::recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=dplyr::recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=dplyr::recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=dplyr::recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=dplyr::recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=dplyr::recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4)
)
str(nojob)
CrossTable(nojob$`Total Crime Per Month`, nojob$`Unemployment in Georgia`, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
View(nojob)
ggplot(nojob, aes('total crime per month'))+ geom_bar()
str(nojob)
plotNormalHistogram(nojob$`Total Crime Per Month`)
plotNormalHistogram(nojob$`Unemployment in Georgia`)
fligner.test('total crime per month' ~ 'Unemployment in Georgia', data=nojob)
fligner.test('total crime per month' ~ 'Unemployment in Georgia', data=nojob)
nojob= read_excel("C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/Woz-U-final-Project/Unemployment and Crime.xlsx")
#second data set to look at unemployment by month/ year and how it effects crime, need to do some analysis still!
library(readxl)
nojob= read_excel("C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/Woz-U-final-Project/Unemployment and Crime.xlsx")
fligner.test(TotalCrime ~ Unemploy_Georgia, data=nojob)
#flattened
plotNormalHistogram(dataR$Prior_Conviction_Episodes_Drug)
#all the packages!
library(ggplot2)
library(dbplyr)
library(tidyr)
library(tidyverse)
library(lattice)
library("gmodels")
library("rcompanion")
library("car")
library("fastR2")
#flattened
plotNormalHistogram(dataR$Prior_Conviction_Episodes_Drug)
#flattened
plotNormalHistogram(dataR$Prison_Offense)
#flattened
plotNormalHistogram(dataR$Prior_Conviction_Episodes_Drug)
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar()
ggplot(data2, aes(Age_at_Release))+ geom_bar()
ggplot(data2, aes(Education_Level))+ geom_bar()
ggplot(data2, aes(Recidivism_Arrest_Year1))+ geom_bar()
ggplot(data2, aes(Recidivism_Arrest_Year2))+ geom_bar()
ggplot(data2, aes(Recidivism_Arrest_Year3))+ geom_bar()
#POST-WRANGLE INFO (checking that forms and types of data work for our analysis)
#to make histograms have to use recoded data.
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Felony))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Misd))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x = Prior_Conviction_Episodes_Viol)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x = Prior_Conviction_Episodes_Prop)) + geom_histogram(binwidth = 0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Drug))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_PPViolationCharges))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_DomesticViolenceCharges))+geom_histogram(binwidth=0.5)
ggplot(dataR, aes(x= Prior_Conviction_Episodes_GunCharges))+geom_histogram(binwidth=0.5)
#second data set to look at unemployment by month/ year and how it effects crime, need to do some analysis still!
library(readxl)
nojob= read_excel("C:/Users/latri/Desktop/SCI SCHOOLING/FINAL PROJECT/Woz-U-final-Project/Unemployment and Crime.xlsx")
#all the packages!
library(ggplot2)
library(dbplyr)
library(tidyr)
library(tidyverse)
library(lattice)
library("gmodels")
library("rcompanion")
library("car")
library("fastR2")
ggplot(nojob, aes(sample = TotalCrime)) + geom_qq()
library(dplyr)
#POST-WRANGLE INFO (checking that forms and types of data work for our analysis)
#to make histograms have to use recoded data.
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Felony))+geom_histogram(binwidth=0.5)
#all the packages!
library(ggplot2)
#POST-WRANGLE INFO (checking that forms and types of data work for our analysis)
#to make histograms have to use recoded data.
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Felony))+geom_histogram(binwidth=0.5)
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar()
ggplot(data2, aes(Prior_Conviction_Episodes_Felony))+ geom_bar()
#POST-WRANGLE INFO (checking that forms and types of data work for our analysis)
#to make histograms have to use recoded data.
ggplot(dataR, aes(x= Prior_Conviction_Episodes_Felony))+geom_bar()
View(Data)
ggplot(Data, aes(Prior_Arrest_Episodes_Drug))
ggplot(Data, aes(Prior_Arrest_Episodes_Drug))+geom_bar()
#removed all unneeded columns
data1 <- Data[ -c(5:8,10, 12:16,18:20,29:49,54) ]
#removing empty cells, looked like there were only 3277
data2= na.omit(data1)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
#recoding prior convictions, education level and prison offense. les is doing all other needed recodes.
dataR= mutate(data2, Prior_Conviction_Episodes_Felony=dplyr::recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=dplyr::recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=dplyr::recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=dplyr::recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=dplyr::recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=dplyr::recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=dplyr::recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4)
)
library(dbplyr)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
#recoding prior convictions, education level and prison offense. les is doing all other needed recodes.
dataR= mutate(data2, Prior_Conviction_Episodes_Felony=dplyr::recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=dplyr::recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=dplyr::recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=dplyr::recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=dplyr::recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=dplyr::recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=dplyr::recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4)
)
library(tidyr)
library(tidyverse)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
#recoding prior convictions, education level and prison offense. les is doing all other needed recodes.
dataR= mutate(data2, Prior_Conviction_Episodes_Felony=dplyr::recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=dplyr::recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=dplyr::recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=dplyr::recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=dplyr::recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=dplyr::recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=dplyr::recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4)
)
ggplot(data2, aes(Prior_Arrest_Episodes_Drug))+geom_bar()
ggplot(Data, aes(DrugTests_THC_Positive))+geom_bar()
ggplot(Data, aes(DrugTests_THC_Positive))+geom_line()
ggplot(Data, aes(sample=DrugTests_THC_Positive))+geom_qq()
CrossTable(data2$Prior_Arrest_Episodes_Drug, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
library(ggplot2)
library(dbplyr)
library(tidyr)
library(tidyverse)
library(lattice)
library("gmodels")
library("rcompanion")
library("car")
library("fastR2")
CrossTable(data2$Prior_Arrest_Episodes_Drug, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#for anything with only two fators
CrossTable(data2$Gender, data2$Recidivism_Within_3years, chisq = TRUE,mcnemar = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
ggplot(Data, aes(sample=DrugTests_Meth_Positive))+geom_qq()
ggplot(Data, aes(x= DrugTests_Meth_Positive))+geom_histogram(binwidth=0.5)
ggplot(Data, aes(x= DrugTests_Meth_Positive))+geom_histogram(binwidth=0.001)
ggplot(Data, aes(x= DrugTests_Meth_Positive))+geom_histogram(binwidth=0.01)
ggplot(Data, aes(x= DrugTests_Meth_Positive))+geom_histogram(binwidth=0.15)
ggplot(Data, aes(x= DrugTests_Meth_Positive))+geom_histogram(binwidth=0.5)
ggplot(Data, aes(x= DrugTests_Meth_Positive))+geom_histogram(binwidth=0.3)
ggplot(Data, aes(x= DrugTests_THC_Positive))+geom_histogram(binwidth=0.3)
ggplot(Data, aes(x= DrugTests_THC_Positive))+geom_histogram(binwidth=0.1)
ggplot(Data, aes(x= DrugTests_THC_Positive))+geom_histogram(binwidth=0.00)
ggplot(Data, aes(x= DrugTests_THC_Positive))+geom_histogram(binwidth=0.09)
ggplot(Data, aes(x= DrugTests_THC_Positive))+geom_histogram(binwidth=0.05)
ggplot(Data, aes(x= DrugTests_Other_Positive))+geom_histogram(binwidth=0.05)
fligner.test(Education_Level ~ Prison_Offense, data=dataR)
fligner.test(Education_Level ~ Prior_Conviction_Episodes_Felony, data=dataR)
fligner.test(TotalCrime ~ Unemploy_Georgia, data=nojob)
#can make bar charts without recode!
ggplot(data2, aes(Prison_Offense))+ geom_bar()
ggplot(data2, aes(Education_Level))+ geom_bar()
ggplot(data2, aes(Education_Level))+ geom_bar()
#lots of property offenses
ggplot(data2, aes(Age_at_Release))+ geom_bar()
#majority of people released are between 23- 32, then numbers drop! matches anecdotal info 25 is golden year for rearrest
ggplot(data2, aes(Education_Level))+ geom_bar()
#very few college educated getting arrested, mostly high schooll grads and then some with no diploma
ggplot(data2, aes(Prior_Arrest_Episodes_Drug))+geom_bar()
#once again looking at connection to drugs, the majority have 0 prior arrests, the least having four or "5 or more"
ggplot(data2, aes(Prior_Convictions_Episodes_Drug))+geom_bar()
#once again looking at connection to drugs, the majority have 0 prior arrests, the least having four or "5 or more"
ggplot(data2, aes(Prior_Conviction_Episodes_Drug))+geom_bar()
#this again shows that majority of people dont have many drug convictions, like there are with property
ggplot(data2, aes(Prior_Conviction_Episodes_Prop))+geom_bar()
#this again shows that majority of people dont have many drug convictions, like there are with property
ggplot(data2, aes(Prior_Conviction_Episodes_Misd))+geom_bar()
#this again shows that majority of people dont have many drug convictions, like there are with property
ggplot(Data, aes(Prior_Arrest_Episodes_Misd))+geom_bar()
#this again shows that majority of people dont have many drug convictions, like there are with property
ggplot(Data, aes(Prior_Arrest_Episodes_Prop))+geom_bar()
#this again shows that majority of people dont have many drug convictions, like there are with property
ggplot(Data, aes(Prior_Arrest_Episodes_Property))+geom_bar()
#this again shows that majority of people dont have many drug convictions, like there are with property
ggplot(Data, aes(Prior_Arrest_Episodes_Violent))+geom_bar()
CrossTable(Data$Prior_Arrest_Episodes_Violent, Data$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Education_Level, data2$Prison_Offense, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#more than college educated than expected were commiting violent crimes. committing less property crime than expected. high school only were
#doing less violent/ non sex crime than expected, while no diploma people were doing less violent/ sex crime than expected.
#So highly educated people were more violent than expected! is it b/c loan debt?? haha
CrossTable(data2$Prior_Arrest_Episodes_Drug, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(Data$Prior_Arrest_Episodes_Violent, Data$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
#DSO105 data time!
#we could do some goodness of fit Chi squares with random guesses about probabilities of going back? perhaps need more background info about returning to prison
#independent chi square to compare each! dont need to recode!use this to compare all the conviciton types to each other
CrossTable(data2$Age_at_Release, data2$Prison_Offense, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Age_at_Release, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Education_Level, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
CrossTable(data2$Prison_Offense, data2$Recidivism_Within_3years, chisq = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
ggplot(nojob, aes(sample = TotalCrime)) + geom_qq()
ggplot(nojob, aes(sample = Unemploy_Georgia)) + geom_qq()
ggplot(nojob, aes(x = Unemploy_Georgia, y = Nat_Unemploy))+geom_point()
ggplot(nojob, aes(x = TotalCrime, y = Nat_Unemploy))+geom_point()
ggplot(nojob, aes(x = TotalCrime, y = Unemploy_Georgia))+geom_point()
ggplot(nojob, aes(x = TotalCrime, y = Unemploy_Georgia))+geom_point()+geom_smooth(method=lm)
ggplot(nojob, aes(x = TotalCrime, y = Unemploy_Georgia))+geom_point()+geom_smooth(method=lm, se=FALSE, color = "aquamarine")
ggplot(nojob, aes(x = TotalCrime, y = Unemploy_Georgia))+geom_point()+geom_smooth(method=lm, color = "aquamarine")
#check correlation between some variables?
cor.test(nojob$TotalCrime, nojob$Unemploy_Georgia, method="pearson", use = "complete.obs")
install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(nojob, histogram=FALSE, method="pearson")
nojob1=nojob[, c(3:)]
nojob1=nojob[3:]
nojob1=nojob[, c(3:12)]
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
nojob1=nojob[, c(9:12)]
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
nojob1=nojob[, c(10:12)]
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
nojob1=nojob[, c(3:10)]
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
#made a table with just prior convictions if needed, used recoded data for any needed analysis
priors= dataR[c(7:14)]
chart.Correlation(priors, histogram=FALSE, method="pearson")
View(priors)
#made a table with just prior convictions if needed, used recoded data for any needed analysis
priors= dataR[c(8:14)]
chart.Correlation(priors, histogram=FALSE, method="pearson")
chart.Correlation(priors, histogram=FALSE, method="pearson")
View(dataR)
dataR1= dataR[, c(5,6)]
chart.Correlation(dataR1, histogram=FALSE, method="pearson")
dataR1= dataR[, c(4,6)]
chart.Correlation(dataR1, histogram=FALSE, method="pearson")
dataR1= dataR[, c(5,6,9:12)]
chart.Correlation(dataR1, histogram=FALSE, method="pearson")
#making nice looking plots
corr_matrix <- cor(dataR1)
corr_matrix
install.packages("corrplot")
library("corrplot")
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
#making nice looking plots
corr_matrix <- cor(nojob1)
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.05, insig="blank")
#making nice looking plots
corr_matrix <- cor(dataR)
dataR1= dataR[, c(5:12)]
#making nice looking plots
corr_matrix <- cor(dataR1)
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.05, insig="blank")
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
View(dataR1)
dataR1= dataR[, c(5,6,9:12)]
#making nice looking plots
corr_matrix <- cor(dataR1)
corr_matrix
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
View(dataR)
View(data1)
View(data2)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
#recoding prior convictions, education level and prison offense. les is doing all other needed recodes.
dataR= mutate(data2, Prior_Conviction_Episodes_Felony=dplyr::recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=dplyr::recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=dplyr::recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=dplyr::recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=dplyr::recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=dplyr::recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=dplyr::recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4),
Recidivism_Within_3Years=dplyr::recode(Recidivism_Within_3Years,"True"=0, "False"=1)
)
str(data2)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
#recoding prior convictions, education level and prison offense. les is doing all other needed recodes.
dataR= mutate(data2, Prior_Conviction_Episodes_Felony=dplyr::recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=dplyr::recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=dplyr::recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=dplyr::recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=dplyr::recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=dplyr::recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=dplyr::recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4),
Recidivism_Within_3years=dplyr::recode(Recidivism_Within_3years,"True"=0, "False"=1)
)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
#recoding prior convictions, education level and prison offense. les is doing all other needed recodes.
dataR= mutate(data2, Prior_Conviction_Episodes_Felony=dplyr::recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=dplyr::recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=dplyr::recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=dplyr::recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=dplyr::recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=dplyr::recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=dplyr::recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4),
Recidivism_Within_3years=dplyr::recode(Recidivism_Within_3years,"true"=0, "false"=1)
)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
#recoding prior convictions, education level and prison offense. les is doing all other needed recodes.
dataR= mutate(data2, Prior_Conviction_Episodes_Felony=dplyr::recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=dplyr::recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=dplyr::recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=dplyr::recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=dplyr::recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=dplyr::recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=dplyr::recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4),
Recidivism_Within_3years=dplyr::recode(Recidivism_Within_3years,"true"=0, "false"=1)
Recidivism_Arrest_Year1=dplyr::recode( Recidivism_Arrest_Year1,"true"=0, "false"=1)
Recidivism_Arrest_Year2=dplyr::recode( Recidivism_Arrest_Year2,"true"=0, "false"=1)
Recidivism_Arrest_Year3=dplyr::recode( Recidivism_Arrest_Year3,"true"=0, "false"=1)
)
#everything is a factor with multiple levels, should be able to do some analysis and significant testing, or can recode data into numbers.
#recoding prior convictions, education level and prison offense. les is doing all other needed recodes.
dataR= mutate(data2, Prior_Conviction_Episodes_Felony=dplyr::recode(Prior_Conviction_Episodes_Felony,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Misd=dplyr::recode(Prior_Conviction_Episodes_Misd,"0"=0, "1"=1, "2"=2, "3"= 3, "4 or more"= 4),
Prior_Conviction_Episodes_Viol=dplyr::recode(Prior_Conviction_Episodes_Viol, "true"=0, "false"=1),
Prior_Conviction_Episodes_Prop=dplyr::recode(Prior_Conviction_Episodes_Prop,"0"=0, "1"=1, "2"=2, "3 or more"= 3),
Prior_Conviction_Episodes_Drug=dplyr::recode(Prior_Conviction_Episodes_Drug,"0"=0, "1"=1, "2 or more"= 2),
Prior_Conviction_Episodes_PPViolationCharges=dplyr::recode(Prior_Conviction_Episodes_PPViolationCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_DomesticViolenceCharges=dplyr::recode(Prior_Conviction_Episodes_DomesticViolenceCharges,"true"=0, "false"=1),
Prior_Conviction_Episodes_GunCharges=dplyr::recode(Prior_Conviction_Episodes_GunCharges,"true"=0, "false"=1),
Education_Level=dplyr::recode(Education_Level,"At least some college"=3, "High School Diploma"=2, "Less than HS diploma"=1),
Prison_Offense=dplyr::recode(Prison_Offense,"Drug"=0, "Other"=1, "Property"=2, "Violent/Non-Sex"= 3, "Violent/Sex"=4),
Recidivism_Within_3years=dplyr::recode(Recidivism_Within_3years,"true"=0, "false"=1),
Recidivism_Arrest_Year1=dplyr::recode( Recidivism_Arrest_Year1,"true"=0, "false"=1),
Recidivism_Arrest_Year2=dplyr::recode( Recidivism_Arrest_Year2,"true"=0, "false"=1),
Recidivism_Arrest_Year3=dplyr::recode( Recidivism_Arrest_Year3,"true"=0, "false"=1)
)
dataR1= dataR[, c(5,6,8:19)]
#making nice looking plots
corr_matrix <- cor(dataR1)
corr_matrix
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
dataR1= dataR[, c(5,6,8,9,10,11,12,16:19)]
#making nice looking plots
corr_matrix <- cor(dataR1)
corrplot(corr_matrix, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
corr_mat= cor(nojob1)
View(nojob1)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
View(nojob1)
nojob1=nojob[, c(3:11)]
View(nojob1)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
corr_mat= cor(nojob1)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
nojob1=nojob[, c(3:11)]
chart.Correlation(nojob1, histogram=FALSE, method="pearson")
nojob1=nojob[, c(3:11)]
corr_mat= cor(nojob1)
corrplot(corr_mat, type="upper", order="hclust", p.mat = corr_matrix, sig.level = 0.01, insig="blank")
#for anything with only two fators
CrossTable(data2$Gender, data2$Recidivism_Within_3years, chisq = TRUE,mcnemar = TRUE, expected = TRUE, sresid=TRUE, format="SPSS")
